CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  token VARCHAR (255) NOT NULL,
  email VARCHAR (255) NOT NULL, 
  name VARCHAR (255) NOT NULL,
  alias VARCHAR (255),
  location VARCHAR (255)
);

CREATE TABLE friends (
  id SERIAL PRIMARY KEY,
  userId INTEGER NOT NULL REFERENCES users(id),
  userId2 INTEGER NOT NULL REFERENCES users(id),
  accepted BOOLEAN NOT NULL DEFAULT false,
  waitingOn INTEGER REFERENCES users(id)
);

CREATE TABLE events (
  id SERIAL PRIMARY KEY,
  owner_id INTEGER NOT NULL REFERENCES users(id),
  user_ids INTEGER[],
  name VARCHAR (255) NOT NULL,
  start_time TIMESTAMP,
  end_time TIMESTAMP,
  location VARCHAR (255),
  description TEXT,
  allow_time_input BOOLEAN NOT NULL DEFAULT true,
  allow_time_voting BOOLEAN NOT NULL DEFAULT true,
  allow_activity_input BOOLEAN NOT NULL DEFAULT true,
  allow_activity_voting BOOLEAN NOT NULL DEFAULT true
);

CREATE TABLE attendees (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id),
  event_id INTEGER NOT NULL REFERENCES events(id),
  status VARCHAR (255) NOT NULL,
  owner BOOLEAN NOT NULL DEFAULT false
);

CREATE TABLE activities (
  id SERIAL PRIMARY KEY,
  event_id INTEGER NOT NULL REFERENCES events(id),
  user_id INTEGER NOT NULL REFERENCES users(id),
  activity VARCHAR (255) NOT NULL,
  description TEXT
);

CREATE TABLE activity_votes (
  id SERIAL PRIMARY KEY,
  event_id INTEGER NOT NULL REFERENCES events(id),
  user_id INTEGER NOT NULL REFERENCES users(id),
  activity_id INTEGER NOT NULL REFERENCES activities(id)
);

CREATE TABLE times (
  id SERIAL PRIMARY KEY,
  event_id INTEGER NOT NULL references events(id),
  user_id INTEGER NOT NULL references users(id),
  start_time TIMESTAMP,
  end_time TIMESTAMP
);

CREATE TABLE time_votes (
  id SERIAL PRIMARY KEY,
  event_id INTEGER NOT NULL REFERENCES events(id),
  user_id INTEGER NOT NULL REFERENCES users(id),
  time_id INTEGER NOT NULL REFERENCES times(id)
);